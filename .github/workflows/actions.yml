name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
  release:
    types: [created]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        backend: [tensorflow, jax, torch, numpy]
        python-version: ['3.9', '3.10', '3.11']

    name: Run tests
    runs-on: ubuntu-latest
    env:
      KERAS_BACKEND: ${{ matrix.backend }}
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Check for changes in keras_core/applications
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            applications:
              - 'keras_core/applications/**'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
          cache-dependency-path: poetry.lock

      - name: Install poetry
        run: pipx install poetry

      - name: Install dependencies
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install -v

      - name: Test keras_core/applications
        if: ${{ steps.filter.outputs.applications == 'true' }}
        run: poetry run pytest keras_core/applications

      - name: Test
        run: poetry run pytest keras_core --ignore keras_core/applications

  format:
    name: Check the code format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'
          cache-dependency-path: poetry.lock

      - name: Install dependencies
        run: |
          poetry env use 3.10
          poetry install -v
      - name: Lint
        run: poetry run bash shell/lint.sh
